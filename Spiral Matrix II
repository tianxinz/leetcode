/*
Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

For example,
Given n = 3,

You should return the following matrix:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]
*/


public class Solution {
    public int[][] generateMatrix(int n) {
        
        if( n == 0)
        return new int[0][0];
        
        int[][] mat = new int[n][n];
        
        int top;
        int down;
        int start = 1;
        
        for(int i =0; i<n/2; i++)
        {
            top = i;
            down = n-1-i;
            
            start = placeNum(start, top, down, mat);
            
        }
        
        if(n%2 == 0)
        {
            return mat;
        }
        
        else
        {
            mat[n/2][n/2] = n*n;
            return mat;
        }
        
    }
    
    public int placeNum(int start, int top, int down, int[][] mat)
    {
        int num = start;
        for(int i = top; i<down; i++)
        {
            mat[top][i] = num++;
        }
        
        for(int i = top; i<down; i++)
        {
            mat[i][down] = num++;
        }
        
        for(int i=down; i>top; i--)
        {
            mat[down][i] = num++;
        }
        
        for(int i=down; i>top; i--)
        {
            mat[i][top] =num++;
        }
        
        return num;
    }
    
    
    
}
