/*

Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.

*/

public class Solution {
    public int maxArea(int[] height) {
        
        int num = height.length;
        if(num ==0 || num == 1)
            return 0;
        
        int max_volumn = 0;
        
        int max_left = 0;
        
        step:for(int i=0; i<num-1; i++)
        {
            if(height[i] > max_left)
            {
                max_left = height[i];
            }
            
            else
                continue step;
            
            for(int j=num-1; j>=i+1; j--)
            {
                int tmp = volumn(i, height[i], j, height[j]);
                if(tmp > max_volumn)
                {
                    max_volumn = tmp;
                }
                if(height[j] > height[i])
                continue step;
            }
        }
        
        return max_volumn;
        
    }
    
    public int volumn(int i, int height_i, int j, int height_j)
    {
        if(height_i > height_j)
            return (j-i) * height_j;
        
        else
            return (j-i) * height_i;
    }
}
