/*
Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

*/


public class Solution {
    public ArrayList<ArrayList<Integer>> generate(int numRows) {
        
        if(numRows == 0)
        {
            return new ArrayList<ArrayList<Integer>>();
        }
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<ArrayList<Integer>>();
        ArrayList<Integer> first_level = new ArrayList<Integer>();
        first_level.add(1);
        result.add(first_level);
        
        for(int i=2; i<=numRows; i++)
        {
            result.add( generateNext(result.get( result.size()-1 ) ) );
        }
        
        return result;
        
    }
    
    public ArrayList<Integer> generateNext(ArrayList<Integer> num_list)
    {
        int num = num_list.size() + 1;
        ArrayList<Integer> next_list = new ArrayList<Integer>();
        
        next_list.add(1);
        for(int i = 0; i< num - 2; i++)
        {
            int tmp = num_list.get(i) + num_list.get(i+1);
            next_list.add(tmp);
        }
        
        next_list.add(1);
        
        return next_list;
    }
}
